<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-build</artifactId>
		<version>${revision}</version>
	</parent>
	<artifactId>spring-boot-project</artifactId>
	<groupId>org.springframework.boot</groupId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>Spring Boot Build</name>
	<description>Spring Boot Build</description>
	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
		<netty.version>4.1.6.Final</netty.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
		<maven-jar-plugin.version>2.6</maven-jar-plugin.version>
		<maven-war-plugin.version>3.2.0</maven-war-plugin.version>
		<maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
		<mybatis-generator-maven-plugin.version>1.3.5</mybatis-generator-maven-plugin.version>
		<fastjson.version>1.2.47</fastjson.version>
		<lombok.version>1.18.2</lombok.version>
	</properties>
	<modules>
		<module>spring-boot-dependencies</module>
		<module>spring-boot-parent</module>
		<module>spring-boot</module>
		<module>spring-boot-actuator</module>
		<module>spring-boot-actuator-autoconfigure</module>
		<module>spring-boot-autoconfigure</module>
		<module>spring-boot-devtools</module>
		<module>spring-boot-properties-migrator</module>
		<module>spring-boot-test</module>
		<module>spring-boot-test-autoconfigure</module>
		<module>spring-boot-tools</module>
		<module>spring-boot-starters</module>
		<module>spring-boot-cli</module>
		<module>spring-boot-docs</module>
		<module>game-pay</module>

		<!-- spring 5.0.8 src -->
		<!--<module>spring-websocket</module>
		<module>spring-webmvc</module>
		<module>spring-webflux</module>
		<module>spring-web</module>
		<module>spring-tx</module>
		<module>spring-test</module>
		<module>spring-oxm</module>
		<module>spring-orm</module>
		<module>spring-messaging</module>
		<module>spring-jms</module>
		<module>spring-jdbc</module>
		<module>spring-jcl</module>
		<module>spring-instrument</module>
		<module>spring-expression</module>
		<module>spring-core</module>
		<module>spring-context-support</module>
		<module>spring-context-indexer</module>
		<module>spring-context</module>
		<module>spring-beans</module>
		<module>spring-aspects</module>
		<module>spring-aop</module>-->

	</modules>



	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>spring-boot</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>

				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>${mybatis-generator-maven-plugin.version}</version>
				<executions>
					<execution>
						<configuration>
							<verbose>true</verbose>
							<overwrite>true</overwrite>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 解决资源文件的编码问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>


			<!-- 分给线 start -->
			<!--   &lt;!&ndash; 打包jar文件时，配置manifest文件，加入lib包的jar依赖 &ndash;&gt;-->
			<!--  <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-jar-plugin</artifactId>
                  <version>${maven-jar-plugin.version}</version>
                  <configuration>
                      <archive>
                          <manifest>
                              <addClasspath>true</addClasspath>
                              <classpathPrefix>lib/</classpathPrefix>
                              <mainClass>com.lyh.game.baccara.start.GameStart</mainClass>
                          </manifest>
                        &lt;!&ndash;  &lt;!&ndash; 添加第三方的jar
                          <manifestEntries>
                              <Class-Path>lib/class-util-1.0.jar lib/pool-executor-1.0.jar</Class-Path>
                          </manifestEntries> &ndash;&gt;
                      </archive>
                  </configuration>
              </plugin>-->
			<!-- &lt;!&ndash; 拷贝依赖的jar包到lib目录 &ndash;&gt;-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- &lt;!&ndash; 自定义打zip包 &ndash;&gt;-->
			<!--  <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-assembly-plugin</artifactId>
                  <version>${maven-assembly-plugin.version}</version>
                  <configuration>
                      <descriptors>
                          <descriptor>src/main/resources/assembly.xml</descriptor>
                      </descriptors>
                  </configuration>
                  <executions>
                      <execution>
                          <id>make-assembly</id>
                          <phase>package</phase>
                          <goals>
                              <goal>single</goal>
                          </goals>
                      </execution>
                  </executions>
              </plugin>-->

			<!-- &lt;!&ndash; copy文件 &ndash;&gt;-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>

							<tasks>
								<echo message="copy  profile ......"/>
								<!-- <mkdir dir="${project.build.directory}/res"/>-->
								<!--  &lt;!&ndash; ${project.build.directory}这个是tartget目录 &ndash;&gt;
                                  &lt;!&ndash; 这句话的意思是将file 里面的内容复制到 &ndash;&gt;
                                  &lt;!&ndash;<copy overwrite="true" tofile="${project.build.directory}/res/logback.xml"
                                        file="${project.basedir}/../res/logback.xml"/>&ndash;&gt;
                                  &lt;!&ndash; copy 文件夹 &ndash;&gt;-->
								<!--   <copy todir="${project.build.directory}/res/">
                                       <fileset dir="${project.basedir}/../res">
                                           <include name="*.properties" />
                                           <include name="*.xml" />
                                           <include name="*.txt"/>
                                           <include name="game-key.dat"/>
                                       </fileset>
                                   </copy>
   -->
								<echo message="copy  profile done ......"/>


								<echo message="delete jar start"/>
								<delete file="${project.build.directory}/lib/netty-buffer-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-codec-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-codec-http-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-codec-socks-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-common-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-handler-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-handler-proxy-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-resolver-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-transport-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-transport-native-epoll-4.1.16.Final.jar"/>
								<delete file="${project.build.directory}/lib/netty-transport-native-unix-common-4.1.16.Final.jar"/>
								<echo message="delete profile end"/>

							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!--分割线 end-->
		</plugins>
		<!-- 打包过滤  resources部分的作用是，根据maven打包-P参数执行的属性-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>rebel.xml</exclude>
					<exclude>assembly.xml</exclude>
					<exclude>generatorConfig.xml</exclude>
				</excludes>
			</resource>
		</resources>
		<!-- 默认goal -->
		<defaultGoal>package</defaultGoal>
	</build>
</project>
